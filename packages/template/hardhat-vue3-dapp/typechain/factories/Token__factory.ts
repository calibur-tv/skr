/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { Token, TokenInterface } from '../Token'

const _abi = [
  {
    inputs: [
      {
        internalType: 'string',
        name: '_name',
        type: 'string'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'balanceOf',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'name',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'symbol',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'totalSupply',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256'
      }
    ],
    name: 'transfer',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  }
]

const _bytecode =
  '0x60806040526040518060400160405280600381526020017f4d4854000000000000000000000000000000000000000000000000000000000081525060019080519060200190620000519291906200024e565b50620f42406002553480156200006657600080fd5b50604051620010e2380380620010e283398181016040528101906200008c919062000370565b620000d86040518060400160405280601881526020017f4465706c6f79696e67206120546f6b656e206e616d65643a0000000000000000815250826200017f60201b620004ac1760201c565b600254600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060009080519060200190620001779291906200024e565b5050620005bd565b62000221828260405160240162000198929190620003f6565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200022560201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546200025c90620004e2565b90600052602060002090601f016020900481019282620002805760008555620002cc565b82601f106200029b57805160ff1916838001178555620002cc565b82800160010185558215620002cc579182015b82811115620002cb578251825591602001919060010190620002ae565b5b509050620002db9190620002df565b5090565b5b80821115620002fa576000816000905550600101620002e0565b5090565b6000620003156200030f846200045a565b62000431565b9050828152602081018484840111156200032e57600080fd5b6200033b848285620004ac565b509392505050565b600082601f8301126200035557600080fd5b815162000367848260208601620002fe565b91505092915050565b6000602082840312156200038357600080fd5b600082015167ffffffffffffffff8111156200039e57600080fd5b620003ac8482850162000343565b91505092915050565b6000620003c28262000490565b620003ce81856200049b565b9350620003e0818560208601620004ac565b620003eb81620005ac565b840191505092915050565b60006040820190508181036000830152620004128185620003b5565b90508181036020830152620004288184620003b5565b90509392505050565b60006200043d62000450565b90506200044b828262000518565b919050565b6000604051905090565b600067ffffffffffffffff8211156200047857620004776200057d565b5b6200048382620005ac565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620004cc578082015181840152602081019050620004af565b83811115620004dc576000848401525b50505050565b60006002820490506001821680620004fb57607f821691505b602082108114156200051257620005116200054e565b5b50919050565b6200052382620005ac565b810181811067ffffffffffffffff821117156200054557620005446200057d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610b1580620005cd6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde031461006757806318160ddd1461008557806370a08231146100a35780638da5cb5b146100d357806395d89b41146100f1578063a9059cbb1461010f575b600080fd5b61006f61012b565b60405161007c91906107d0565b60405180910390f35b61008d6101b9565b60405161009a91906108b7565b60405180910390f35b6100bd60048036038101906100b891906106d6565b6101bf565b6040516100ca91906108b7565b60405180910390f35b6100db610208565b6040516100e891906107b5565b60405180910390f35b6100f961022e565b60405161010691906107d0565b60405180910390f35b610129600480360381019061012491906106ff565b6102bc565b005b60008054610138906109e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610164906109e7565b80156101b15780601f10610186576101008083540402835291602001916101b1565b820191906000526020600020905b81548152906001019060200180831161019457829003601f168201915b505050505081565b60025481565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001805461023b906109e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610267906109e7565b80156102b45780601f10610289576101008083540402835291602001916102b4565b820191906000526020600020905b81548152906001019060200180831161029757829003601f168201915b505050505081565b61033a6040518060400160405280601b81526020017f53656e6465722062616c616e636520697320257320746f6b656e730000000000815250600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610548565b61037a6040518060400160405280601e81526020017f547279696e6720746f2073656e6420257320746f6b656e7320746f202573000081525082846105e4565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156103fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f390610897565b60405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461044b9190610944565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104a191906108ee565b925050819055505050565b61054482826040516024016104c29291906107f2565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610683565b5050565b6105e0828260405160240161055e929190610829565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610683565b5050565b61067e8383836040516024016105fc93929190610859565b6040516020818303038152906040527fe3849f79000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610683565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000813590506106bb81610ab1565b92915050565b6000813590506106d081610ac8565b92915050565b6000602082840312156106e857600080fd5b60006106f6848285016106ac565b91505092915050565b6000806040838503121561071257600080fd5b6000610720858286016106ac565b9250506020610731858286016106c1565b9150509250929050565b61074481610978565b82525050565b6000610755826108d2565b61075f81856108dd565b935061076f8185602086016109b4565b61077881610a77565b840191505092915050565b60006107906011836108dd565b915061079b82610a88565b602082019050919050565b6107af816109aa565b82525050565b60006020820190506107ca600083018461073b565b92915050565b600060208201905081810360008301526107ea818461074a565b905092915050565b6000604082019050818103600083015261080c818561074a565b90508181036020830152610820818461074a565b90509392505050565b60006040820190508181036000830152610843818561074a565b905061085260208301846107a6565b9392505050565b60006060820190508181036000830152610873818661074a565b905061088260208301856107a6565b61088f604083018461073b565b949350505050565b600060208201905081810360008301526108b081610783565b9050919050565b60006020820190506108cc60008301846107a6565b92915050565b600081519050919050565b600082825260208201905092915050565b60006108f9826109aa565b9150610904836109aa565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561093957610938610a19565b5b828201905092915050565b600061094f826109aa565b915061095a836109aa565b92508282101561096d5761096c610a19565b5b828203905092915050565b60006109838261098a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156109d25780820151818401526020810190506109b7565b838111156109e1576000848401525b50505050565b600060028204905060018216806109ff57607f821691505b60208210811415610a1357610a12610a48565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f4e6f7420656e6f75676820746f6b656e73000000000000000000000000000000600082015250565b610aba81610978565b8114610ac557600080fd5b50565b610ad1816109aa565b8114610adc57600080fd5b5056fea2646970667358221220cc8472a97a9410bab52f04f3a9a605f55fdd8f40a7bf971c5ced1e591f7fad4d64736f6c63430008040033'

export class Token__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer)
  }

  deploy(
    _name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Token> {
    return super.deploy(_name, overrides || {}) as Promise<Token>
  }
  getDeployTransaction(
    _name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, overrides || {})
  }
  attach(address: string): Token {
    return super.attach(address) as Token
  }
  connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token
  }
}
